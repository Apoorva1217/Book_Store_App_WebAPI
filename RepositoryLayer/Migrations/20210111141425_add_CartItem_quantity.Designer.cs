// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer;

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20210111141425_add_CartItem_quantity")]
    partial class add_CartItem_quantity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CommonLayer.Models.AdminUserRegistration", b =>
                {
                    b.Property<long>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("AdminId");

                    b.ToTable("adminUserRegistrations");
                });

            modelBuilder.Entity("CommonLayer.Models.CartItem", b =>
                {
                    b.Property<int>("CartItem_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AddedToCart");

                    b.Property<string>("LoginUser");

                    b.Property<int?>("NewOrderOrderId");

                    b.Property<long>("Price");

                    b.Property<int>("Product_id");

                    b.Property<int>("QuantityToBuy");

                    b.HasKey("CartItem_id");

                    b.HasIndex("NewOrderOrderId");

                    b.HasIndex("Product_id");

                    b.ToTable("cartItems");
                });

            modelBuilder.Entity("CommonLayer.Models.CustomerDetails", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Landmark")
                        .IsRequired();

                    b.Property<string>("Locality")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("Pincode")
                        .IsRequired();

                    b.HasKey("CustomerId");

                    b.ToTable("customerDetails");
                });

            modelBuilder.Entity("CommonLayer.Models.NewOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("newOrders");
                });

            modelBuilder.Entity("CommonLayer.Models.Product", b =>
                {
                    b.Property<int>("Product_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AddedToCart");

                    b.Property<string>("Author")
                        .IsRequired();

                    b.Property<string>("BookImage");

                    b.Property<string>("BookName")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<long>("Price");

                    b.Property<long>("Quantity");

                    b.HasKey("Product_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("CommonLayer.Models.UserRegistration", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("userRegistrations");
                });

            modelBuilder.Entity("CommonLayer.Models.CartItem", b =>
                {
                    b.HasOne("CommonLayer.Models.NewOrder")
                        .WithMany("Orders")
                        .HasForeignKey("NewOrderOrderId");

                    b.HasOne("CommonLayer.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CommonLayer.Models.NewOrder", b =>
                {
                    b.HasOne("CommonLayer.Models.CustomerDetails", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
